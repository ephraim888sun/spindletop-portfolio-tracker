// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  tag       String   @unique
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  portfolio Asset[]
}

model Asset {
  id                 Int           @id @default(autoincrement())
  symbol             String        @unique
  initialPrice       Float
  initialShareAmount Int
  dateBought         DateTime
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  organizationId     Int
  organization       Organization  @relation(fields: [organizationId], references: [id])
  transactions       Transaction[]
}

model Transaction {
  id        Int             @id @default(autoincrement())
  assetId   Int
  asset     Asset           @relation(fields: [assetId], references: [id])
  quantity  Int
  price     Float
  date      DateTime
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  type      TransactionType // Enum for buy/sell
}

model ErrorLog {
  id              String   @id @default(cuid())
  name            String
  message         String
  error_stack     String
  component_stack String
  createdAt       DateTime @default(now())
}

enum TransactionType {
  BUY
  SELL
}
